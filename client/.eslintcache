[{"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js":"1","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx":"2","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx":"3","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx":"4","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx":"5","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx":"6","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx":"7","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx":"8","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js":"9","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx":"10","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js":"11","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx":"12","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx":"13","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx":"14","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx":"15","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx":"16","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Register.jsx":"17","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentsRoute.jsx":"18","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\PrivacyPolicy.jsx":"19","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientLogin.jsx":"20","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientDashboard.jsx":"21","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientUpdateProfile.jsx":"22","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\RMT\\RMTDashboardHeader.jsx":"23","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\RMT\\RMTLogin.jsx":"24"},{"size":159,"mtime":1611085932279,"results":"25","hashOfConfig":"26"},{"size":4174,"mtime":1623252518757,"results":"27","hashOfConfig":"26"},{"size":289,"mtime":1613882358305,"results":"28","hashOfConfig":"26"},{"size":368,"mtime":1612124187101,"results":"29","hashOfConfig":"26"},{"size":549,"mtime":1619719833539,"results":"30","hashOfConfig":"26"},{"size":2547,"mtime":1619719542033,"results":"31","hashOfConfig":"26"},{"size":514,"mtime":1620924069401,"results":"32","hashOfConfig":"26"},{"size":28429,"mtime":1623252518755,"results":"33","hashOfConfig":"26"},{"size":1164,"mtime":1613849692881,"results":"34","hashOfConfig":"26"},{"size":2085,"mtime":1611780835384,"results":"35","hashOfConfig":"26"},{"size":178,"mtime":1621363272965,"results":"36","hashOfConfig":"26"},{"size":3309,"mtime":1621356508617,"results":"37","hashOfConfig":"26"},{"size":2468,"mtime":1619717639196,"results":"38","hashOfConfig":"26"},{"size":10458,"mtime":1623252518757,"results":"39","hashOfConfig":"26"},{"size":1500,"mtime":1620923370171,"results":"40","hashOfConfig":"26"},{"size":4232,"mtime":1620921956811,"results":"41","hashOfConfig":"26"},{"size":2147,"mtime":1614614777132,"results":"42","hashOfConfig":"26"},{"size":1202,"mtime":1622483309441,"results":"43","hashOfConfig":"26"},{"size":8804,"mtime":1619714088712,"results":"44","hashOfConfig":"26"},{"size":2201,"mtime":1623252518757,"results":"45","hashOfConfig":"26"},{"size":1394,"mtime":1623252518757,"results":"46","hashOfConfig":"26"},{"size":24924,"mtime":1623252518757,"results":"47","hashOfConfig":"26"},{"size":592,"mtime":1622140157513,"results":"48","hashOfConfig":"26"},{"size":1732,"mtime":1622139926937,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"tn7fgm",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\index.js",[],["105","106"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\App.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Homepage.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ThanksForBooking.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Dashboard.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\ClientProfile.jsx",["107"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport RMTDashboardHeader from '../components/RMT/RMTDashboardHeader'\r\n\r\nconst ClientProfile = ({setAuth}) => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext)\r\n\r\n    useEffect(()=>{\r\n        const getData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <RMTDashboardHeader setAuth={setAuth} />\r\n            <h2>{selectedClientProfile && selectedClientProfile.first_name}'s profile</h2>\r\n            <table className=\"ui celled table tm30\">\r\n                <thead>\r\n                    <th>First Name</th>\r\n                    <th>Last Name</th>\r\n                    <th>Email</th>\r\n                    <th>Phone</th>\r\n                    <th>Date of Birth</th>\r\n                    <th>Service Selected</th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>{selectedClientProfile && selectedClientProfile.first_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.last_name}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.email}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.phone}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.date_of_birth}</td>\r\n                        <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <div>\r\n                <Link to={`/dashboard/profile/${id}/appointments`}><button className=\"ui button teal\">Appointments</button></Link>\r\n                <Link to={`/dashboard/profile/healthhistory/${id}`}><button className=\"ui button teal\">Health History</button></Link>\r\n                <Link to={`/dashboard/profile/${id}/addappointment`}><button className=\"ui button pink\">Add appointment</button></Link>\r\n            </div>\r\n        </div>    \r\n    )\r\n}\r\n\r\nexport default ClientProfile\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Header.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\BookAMassage.jsx",["108","109"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\contexts\\ClientProfileContext.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientProfileList.jsx",["110"],"import React, {useEffect, useContext} from 'react'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\nconst ClientProfileList = (props) => {\r\n\r\n    let history = useHistory();\r\n\r\n    //bring in contexts to store state data from response and update state\r\n    const { ClientProfiles, setClientProfiles } = useContext(ClientProfileContext)\r\n\r\n    //retrieve data from ClientFilesApi and set state of ClientProfiles \r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(\"/api/1/clientprofiles\");\r\n                setClientProfiles(response.data.data.clientProfiles);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    const handleClickProfileSelect = (id) => {\r\n        history.push(`/dashboard/profile/${id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"ui selectable celled table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>First name</th>\r\n                        <th>Last name</th>\r\n                        <th>Email</th>\r\n                        <th>Phone</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {ClientProfiles && ClientProfiles.map(clientProfile => {\r\n                        return (\r\n                            <tr onClick={()=>handleClickProfileSelect(clientProfile.id)} key={clientProfile.id}>\r\n                                <td>{clientProfile.first_name}</td>\r\n                                <td>{clientProfile.last_name}</td>\r\n                                <td>{clientProfile.email}</td>\r\n                                <td>Phone</td>\r\n                            </tr>\r\n                        )\r\n                    })}                   \r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClientProfileList\r\n",["111","112"],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\apis\\ClientFilesApi.js",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\HealthHistory.jsx",["113"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport { ClientProfileContext } from '../contexts/ClientProfileContext'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport RMTDashboardHeader from '../components/RMT/RMTDashboardHeader'\r\n\r\nconst HealthHistory = ({setAuth}) => {\r\n\r\n    const {id} = useParams();\r\n    const {selectedClientProfile, setSelectedClientProfile} = useContext(ClientProfileContext);\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data.clientProfile);\r\n            } catch (err) {\r\n                console.log(err)\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <RMTDashboardHeader setAuth={setAuth} />\r\n                <h2>{selectedClientProfile.first_name}'s Health History</h2>\r\n                <h4>Last updated: {selectedClientProfile && selectedClientProfile.date_updated}</h4>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>Reason for seeking Massage Therapy</th>\r\n                        <th>Service</th>\r\n                        <th>Treatment from other HCPs</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.reason_for_massage}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.service}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.other_hcp}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <h4>Cardiovascular</h4>\r\n                <table className=\"ui celled compact table tm30\">\r\n                    <thead>\r\n                        <th>None</th>\r\n                        <th>High Blood Pressure</th>\r\n                        <th>Low Blood Pressure</th>\r\n                        <th>History of Heart Attack(s)</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedClientProfile && selectedClientProfile.cardio_none ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.high_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.low_blood_pressure ? \"yes\" : \"no\"}</td>\r\n                            <td>{selectedClientProfile && selectedClientProfile.heart_attack ? \"yes\" : \"no\"}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"tm30\">\r\n                <Link to={`/dashboard/profile/${id}/appointments`}><button className=\"ui button teal\">Appointments</button></Link>\r\n                <Link to={`/rmt/dashboard/profile/${id}`}><button className=\"ui button\">Back to client profile</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HealthHistory\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\ClientSearchbar.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AddAppointment.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\AppointmentList.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentDetails.jsx",["114","115"],"import React, {useContext, useEffect} from 'react'\r\nimport { useParams, useHistory, Link } from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport {ClientProfileContext} from '../contexts/ClientProfileContext'\r\nimport RMTDashboardHeader from '../components/RMT/RMTDashboardHeader'\r\n\r\nconst AppointmentDetails = ({setAuth}) => {\r\n\r\n    const { selectedAppointment, setSelectedAppointment } = useContext(ClientProfileContext)\r\n\r\n    const {id} = useParams()\r\n    let history = useHistory()\r\n\r\n    useEffect(()=>{\r\n        try {\r\n            const fetchData = async () => {\r\n                const response = await ClientFilesApi.get(`/clientprofile/appointment/${id}`)\r\n                setSelectedAppointment(response.data.data.appointment)\r\n            }\r\n            fetchData()\r\n        } catch (error) {\r\n            console.error(error);\r\n        }  \r\n    }, [])\r\n\r\n    const paymentType = () => {\r\n        if (selectedAppointment.credit) {\r\n            return \"Credit\"\r\n        } else if (selectedAppointment.debit) {\r\n            return \"Debit\"\r\n        } else if (selectedAppointment.cash) {\r\n            return \"Cash/e-transfer\"\r\n        } else {\r\n            return \"Payment not received\"\r\n        }\r\n    }\r\n    \r\n    return (\r\n            <div>\r\n                <RMTDashboardHeader setAuth={setAuth} />\r\n                <table className=\"ui selectable table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Duration</th>\r\n                            <th>Price</th>\r\n                            <th>Payment type</th>\r\n                            <th>View Receipt</th>\r\n                        </tr>                   \r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedAppointment.appointment_date}</td>\r\n                            <td>{selectedAppointment.duration}</td>\r\n                            <td>{selectedAppointment.price}</td>\r\n                            <td>{paymentType()}</td>\r\n                            <td>View receipt Link</td>\r\n                        </tr>                \r\n                    </tbody>\r\n                </table>\r\n                <table className=\"ui selectable table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Purpose of massage</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedAppointment.treatment_purpose}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"ui selectable table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Findings</th>\r\n                            <th>Treatment</th>\r\n                            <th>Results</th> \r\n                        </tr>\r\n                        </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedAppointment.findings}</td>\r\n                            <td>{selectedAppointment.treatment}</td>\r\n                            <td>{selectedAppointment.immediate_results}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <table className=\"ui selectable table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Remex</th>\r\n                            <th>Treatment Plan</th>\r\n                        </tr>                   \r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{selectedAppointment.remex}</td>\r\n                            <td>{selectedAppointment.treatment_plan}</td>\r\n                        </tr>                 \r\n                    </tbody>\r\n                </table>\r\n                <Link to={`/rmt/dashboard/profile/${selectedAppointment.client_id}`}><button className=\"ui button pink\" >Back to Client Profile</button></Link>\r\n            </div>      \r\n    )\r\n}\r\n\r\nexport default AppointmentDetails\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\Register.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\routes\\AppointmentsRoute.jsx",["116","117"],"import React, {useContext, useEffect, useState} from 'react'\r\nimport {ClientProfileContext} from '../contexts/ClientProfileContext'\r\nimport {useParams} from 'react-router-dom'\r\nimport ClientFilesApi from '../apis/ClientFilesApi'\r\nimport AppointmentList from '../components/AppointmentList'\r\nimport RMTDashboardHeader from '../components/RMT/RMTDashboardHeader'\r\n\r\nconst AppointmentsRoute = ({setAuth}) => {\r\n\r\n    const { selectedClientProfile, setSelectedClientProfile } = useContext(ClientProfileContext)\r\n    const {id} = useParams()\r\n\r\n    useEffect(()=>{\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await ClientFilesApi.get(`/clientprofiles/${id}`)\r\n                setSelectedClientProfile(response.data.data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    \r\n        return (\r\n            <div>\r\n                <RMTDashboardHeader setAuth={setAuth} />\r\n                <h3>List of appointments</h3>\r\n                <AppointmentList appointments={selectedClientProfile.appointments} />\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default AppointmentsRoute\r\n","C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\PrivacyPolicy.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientLogin.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientDashboard.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\Patient\\ClientUpdateProfile.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\RMT\\RMTDashboardHeader.jsx",[],"C:\\Users\\cip_d\\documents\\projects\\ciprmt\\client\\src\\components\\RMT\\RMTLogin.jsx",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":23,"column":8,"nodeType":"124","endLine":23,"endColumn":10,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":94,"column":166,"nodeType":"128","endLine":94,"endColumn":193},{"ruleId":"126","severity":1,"message":"127","line":415,"column":105,"nodeType":"128","endLine":415,"endColumn":132},{"ruleId":"122","severity":1,"message":"129","line":24,"column":8,"nodeType":"124","endLine":24,"endColumn":10,"suggestions":"130"},{"ruleId":"118","replacedBy":"131"},{"ruleId":"120","replacedBy":"132"},{"ruleId":"122","severity":1,"message":"123","line":22,"column":8,"nodeType":"124","endLine":22,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":12,"column":9,"nodeType":"136","messageId":"137","endLine":12,"endColumn":16},{"ruleId":"122","severity":1,"message":"138","line":24,"column":8,"nodeType":"124","endLine":24,"endColumn":10,"suggestions":"139"},{"ruleId":"134","severity":1,"message":"140","line":1,"column":39,"nodeType":"136","messageId":"137","endLine":1,"endColumn":47},{"ruleId":"122","severity":1,"message":"123","line":23,"column":8,"nodeType":"124","endLine":23,"endColumn":10,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'setSelectedClientProfile'. Either include them or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'setClientProfiles'. Either include it or remove the dependency array.",["145"],["142"],["143"],["146"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'id' and 'setSelectedAppointment'. Either include them or remove the dependency array.",["147"],"'useState' is defined but never used.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},{"desc":"154","fix":"155"},{"desc":"149","fix":"156"},"Update the dependencies array to be: [id, setSelectedClientProfile]",{"range":"157","text":"158"},"Update the dependencies array to be: [setClientProfiles]",{"range":"159","text":"160"},{"range":"161","text":"158"},"Update the dependencies array to be: [id, setSelectedAppointment]",{"range":"162","text":"163"},{"range":"164","text":"158"},[832,834],"[id, setSelectedClientProfile]",[893,895],"[setClientProfiles]",[835,837],[890,892],"[id, setSelectedAppointment]",[888,890]]